@page "/login"

@using Objects

@inject User currentUser
@inject UsersDbContext db

<content>
    <h1 class="header-1">Log In</h1>
    <form @onsubmit=TryLogIn>
        <div>
            <label for="username">Username</label>
        </div>
        <div>
            <input name="username" type="text" @bind=@username />
        </div>
        <div>
            <label for="password">Password</label>
        </div>
        <div>
            <input name="password" type="text" @bind=@password />
        </div>
        <div>
            <input class="btn-purple" type="submit" value="Submit"/>
        </div>
    </form>

    <h3 style="margin-left: 20px">OR</h3>
    <a href="/signup" class="btn-purple">Sign Up</a>
    <content>
        <h3>@msg</h3>
    </content>
</content>


@code {
    string username = "a";
    string password = "a";
    string msg = "";

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }

    void TryLogIn()
    {
        if (UserExists())
        {
            if (IsPassportValid(username, password))
            {
                SetCurrentUser();
                Update();
                msg = "Succesfully Logged In";
            }
            else
            {
                msg = "Incorrect Password";
            }
        }
        else
        {
            msg = "That user does not exist. You should Sign Up First";
        }
    }

    void SetCurrentUser()
    {
        var user = db.Users.First(user => user.Username == username);

        if (string.IsNullOrEmpty(user.Problem))
        {
            user.CreateMathProblem();
            db.SaveChanges();
        }

        currentUser.Username = user.Username;
        currentUser.Exp = user.Exp;
        currentUser.ExpForNextLevel = user.ExpForNextLevel;   
        currentUser.Level = user.Level;
        currentUser.Problem = user.Problem;
        currentUser.ProblemAnswer = user.ProblemAnswer;
        currentUser.ProblemScore = user.ProblemScore;
    }

    bool IsPassportValid(string? username, string? password)
    {
        var user = db.Users.FirstOrDefault(user => user.Username == username);

        return user != null && user.Password == password;
    }

    bool UserExists()
    {
        return db.Users.ToList().Any(u => u.Username == username);
    }

    void Update()
    {
        username = "";
        password = "";
    }
}
